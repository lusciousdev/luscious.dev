"""
Django settings for lusciousdev project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    ".luscious.dev",
    "127.0.0.1",
    ".localhost",
    "192.168.1.70",
    "192.168.1.71",
    "test.luscious.dev",
    "139.144.46.80",
]

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.twitch',
    
    'home',
    'lastfm',
    'overlay',
    'youtubeapi',
    'blog',
    'quiz',
    
    'django_cleanup.apps.CleanupConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'lusciousdev.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
          BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by email
    'allauth.account.auth_backends.AuthenticationBackend',
]

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

EMAIL_HOST = "smtp.fastmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv("FASTMAIL_USER")
EMAIL_HOST_PASSWORD = os.getenv("FASTMAIL_PASSWORD")
DEFAULT_FROM_EMAIL = "noreply@luscious.dev"
SERVER_EMAIL = "django@luscious.dev"
ADMINS = [ ("luscious", "admin@luscious.dev"), ]

SITE_ID = 1

ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_DEFAULT_HTTP_PROTOCOL = "http" if DEBUG else "https"

LOGIN_REDIRECT_URL = "/"

WSGI_APPLICATION = 'lusciousdev.wsgi.application'
ASGI_APPLICATION = "lusciousdev.asgi.application"

REDIS_PWD = os.getenv("REDIS_PASSWORD", "")
REDIS_HOST = os.getenv("REDIS_HOST", "127.0.0.1")
REDIS_PORT = os.getenv("REDIS_PORT", 6379)
REDIS_BASE_URL = f"redis://:{REDIS_PWD}@{REDIS_HOST}:{REDIS_PORT}"

CHANNELS_DB = os.getenv("CHANNELS_DATABASE", 2)
CHANNEL_LAYERS = {
  "default": {
    "BACKEND": "channels_redis.core.RedisChannelLayer",
    "CONFIG": {
      "hosts": [ f"{REDIS_BASE_URL}/{CHANNELS_DB}" ],
      "symmetric_encryption_keys": [ SECRET_KEY ],
    }
  }
}

TWITCH_API_CLIENT_ID = os.getenv("TWITCH_API_CLIENT_ID")
TWITCH_API_CLIENT_SECRET = os.getenv("TWITCH_API_CLIENT_SECRET")

SOCIALACCOUNT_PROVIDERS = {
  "twitch": {
    "SCOPE": [
      "channel:read:polls",
      "channel:manage:polls",
      "channel:read:redemptions",
      "channel:manage:redemptions",
      "channel:read:predictions",
      "channel:manage:predictions",
    ],
    "APP": {
      "client_id": TWITCH_API_CLIENT_ID,
      "secret": TWITCH_API_CLIENT_SECRET,
    },
    "AUTH_PARAMS": {
      "access_type": "offline",
    }
  }
}

SOCIALACCOUNT_STORE_TOKENS = True

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv("MARIADB_DATABASE", "test_luscious-dev"),
        'USER': os.getenv("MARIADB_USER", "admin"),
        'PASSWORD': os.getenv("MARIADB_PASSWORD", "admin"),
        'HOST': os.getenv("MARIADB_HOST", "127.0.0.1"),
        'PORT': os.getenv("MARIADB_PORT", 3306),
        'OPTIONS': {
          'charset': 'utf8mb4',
          'use_unicode': True
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]  #new

STATIC_ROOT = os.getenv("STATIC_ROOT", BASE_DIR / "staticfiles")

MEDIA_URL = 'media/'
MEDIA_ROOT = os.getenv("MEDIA_ROOT", BASE_DIR / "mediafiles")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging
LOGGING = {
  "version": 1,
  "disable_existing_loggers": False,
  "handlers": {
    "django_file": {
      "level": "DEBUG",
      "class": "logging.FileHandler",
      "filename": "./logs/django.log",
      "encoding": "utf-8",
    },
    "overlay_file": {
      "level": "DEBUG",
      "class": "logging.FileHandler",
      "filename": "./logs/overlay.log",
      "encoding": "utf-8",
    },
    "lastfm_file": {
      "level": "DEBUG",
      "class": "logging.FileHandler",
      "filename": "./logs/lastfm.log",
      "encoding": "utf-8",
    },
    "mail_admins": {
      "level": "ERROR",
      "class": "django.utils.log.AdminEmailHandler",
      "include_html": True,
    }
  },
  "loggers": {
    "django": {
      "handlers": ["django_file"],
      "level": "DEBUG",
      "propagate": True,
    },
    "overlay": {
      "handlers": ["overlay_file"],
      "level": "DEBUG",
      "propagate": True,
    },
    "lastfm": {
      "handlers": ["lastfm_file"],
      "level": "DEBUG",
      "propagate": True,
    },
  },
}

CSRF_TRUSTED_ORIGINS = [ "https://luscious.dev", 
                         "https://www.luscious.dev", 
                         "http://luscious.dev", 
                         "http://www.luscious.dev",
                         "https://test.luscious.dev" ]

# Celery
CELERY_DB = os.getenv("CELERY_DATABASE", 0)
CELERY_BROKER_URL     = f"{REDIS_BASE_URL}/{CELERY_DB}"
CELERY_RESULT_BACKEND = f"{REDIS_BASE_URL}/{CELERY_DB}"

# Custom
LASTFM_API_URL = "https://ws.audioscrobbler.com"
LASTFM_API_KEY = os.getenv("LASTFM_API_KEY")

YOUTUBE_API_KEY = os.getenv("YOUTUBE_API_KEY")

