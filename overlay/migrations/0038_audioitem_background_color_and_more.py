# Generated by Django 5.1.1 on 2024-10-30 04:01

import django.db.models.deletion
import overlay.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('overlay', '0037_audioitem_volume'),
    ]

    operations = [
        migrations.AddField(
            model_name='audioitem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='audioitem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='embeditem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='embeditem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='imageitem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='imageitem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='twitchstreamembeditem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='twitchstreamembeditem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='twitchvideoembeditem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='twitchvideoembeditem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='youtubeembeditem',
            name='background_color',
            field=models.CharField(default='#000000', max_length=255),
        ),
        migrations.AddField(
            model_name='youtubeembeditem',
            name='background_enabled',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='CanvasItem',
            fields=[
                ('id', models.CharField(default=overlay.models.id_gen, editable=False, max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(default='My Item', max_length=256)),
                ('x', models.IntegerField(default=-300)),
                ('y', models.IntegerField(default=-100)),
                ('z', models.IntegerField(default=50)),
                ('width', models.IntegerField(default=300)),
                ('height', models.IntegerField(default=100)),
                ('rotation', models.FloatField(default=0)),
                ('background_enabled', models.BooleanField(default=False)),
                ('background_color', models.CharField(default='#000000', max_length=255)),
                ('opacity', models.FloatField(default=100.0)),
                ('visibility', models.IntegerField(default=1)),
                ('minimized', models.BooleanField(default=False)),
                ('view_lock', models.BooleanField(default=False)),
                ('scroll_direction', models.IntegerField(default=0)),
                ('scroll_duration', models.FloatField(default=5.0)),
                ('crop_top', models.FloatField(default=0, verbose_name='Crop % (top)')),
                ('crop_left', models.FloatField(default=0, verbose_name='Crop % (left)')),
                ('crop_bottom', models.FloatField(default=0, verbose_name='Crop % (bottom)')),
                ('crop_right', models.FloatField(default=0, verbose_name='Crop % (right)')),
                ('history', models.JSONField(blank=True, default={})),
                ('overlay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='overlay.collaborativeoverlay')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
